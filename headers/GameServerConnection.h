class GameServerConnection : public ServerConnection {
  protected:
    class TCPSocket *m_sock;
    class WriteStream m_writeStream;
    volatile bool m_tickInProgress;

    void NotifyDisconnect();
    virtual const char * GetServerType();
    void OnPositionEvent(class Player *);
    void OnPositionAndVelocityEvent(class Player *);
    void OnPlayerPositionEvent(class Player *);
    void OnAddItemEvent(class Player *);
    void OnRemoveItemEvent(class Player *);
    void OnLoadedAmmoEvent(class Player *);
    void OnPickedUpEvent(class Player *);
    void OnEquipItemEvent(class Player *);
    void OnCurrentSlotEvent(class Player *);
    void OnSetCurrentQuestEvent(class Player *);
    void OnStartQuestEvent(class Player *);
    void OnAdvanceQuestToStateEvent(class Player *);
    void OnCompleteQuestEvent(class Player *);
    void OnHealthUpdateEvent(class Player *);
    void OnManaUpdateEvent(class Player *);
    void OnCountdownUpdateEvent(class Player *);
    void OnPvPCountdownUpdateEvent(class Player *);
    void OnPvPEnableEvent(class Player *);
    void OnStateEvent(class Player *);
    void OnTriggerEvent(class Player *);
    void OnFireBulletsEvent(class Player *);
    void OnDisplayEvent(class Player *);
    void OnNPCConversationStateEvent(class Player *);
    void OnNPCConversationEndEvent(class Player *);
    void OnNPCShopEvent(class Player *);
    void OnRespawnThisPlayerEvent(class Player *);
    void OnRespawnOtherPlayerEvent(class Player *);
    void OnTeleportEvent(class Player *);
    void OnRelativeTeleportEvent(class Player *);
    void OnReloadEvent(class Player *);
    void OnRemoteReloadEvent(class Player *);
    void OnPlayerJoinedEvent(class Player *);
    void OnPlayerLeftEvent(class Player *);
    void OnPlayerItemEvent(class Player *);
    void OnActorSpawnEvent(class Player *);
    void OnActorDestroyEvent(class Player *);
    void OnChatEvent(class Player *);
    void OnKillEvent(class Player *);
    void OnCircuitOutputEvent(class Player *);
    void OnRegionChangeEvent(class Player *);
    void OnLastHitByItemEvent(class Player *);
  public:
    GameServerConnection();
    virtual ~GameServerConnection();
    void Connect(const std::string &, uint16_t, int32_t, const std::string &, const class std::function<void (bool, const std::basic_string<char> &, unsigned int, const LocationAndRotation &)> &);
    void MoveAndGetEvents(class Player *);
    void Use(class Actor *);
    void Activate(class Player *, class IItem *);
    void Reload();
    void Jump(bool);
    void Sprint(bool);
    void FireRequest(bool);
    void TransitionToNPCState(const std::string &);
    void BuyItem(class Actor *, class IItem *, uint32_t);
    void SellItem(class Actor *, class IItem *, uint32_t);
    void Respawn();
    void Teleport(const std::string &);
    void EquipItem(uint8_t, class IItem *);
    void SetCurrentSlot(uint8_t);
    void SetCurrentQuest(class IQuest *);
    void Chat(const std::string &);
    void FastTravel(const std::string &, const std::string &);
    void SetPvPDesired(bool);
    void SubmitDLCKey(const std::string &);
    void SetCircuitInputs(const std::string &, uint32_t);
}
